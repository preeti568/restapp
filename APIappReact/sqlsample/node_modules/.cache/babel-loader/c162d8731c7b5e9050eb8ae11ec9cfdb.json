{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _intn = _interopRequireDefault(require(\"./intn\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst SmallInt = {\n  id: 0x34,\n  type: 'INT2',\n  name: 'SmallInt',\n  declaration: function declaration() {\n    return 'smallint';\n  },\n  writeTypeInfo: function writeTypeInfo(buffer) {\n    buffer.writeUInt8(_intn.default.id);\n    buffer.writeUInt8(2);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, _options, cb) {\n    if (parameter.value != null) {\n      buffer.writeUInt8(2);\n      buffer.writeInt16LE(Number(parameter.value));\n    } else {\n      buffer.writeUInt8(0);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'number') {\n      value = Number(value);\n    }\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    if (value < -32768 || value > 32767) {\n      return new TypeError('Value must be between -32768 and 32767, inclusive.');\n    }\n\n    return value | 0;\n  }\n};\nvar _default = SmallInt;\nexports.default = _default;\nmodule.exports = SmallInt;","map":{"version":3,"sources":["C:/Projects/sqlsample/node_modules/tedious/lib/data-types/smallint.js"],"names":["Object","defineProperty","exports","value","default","_intn","_interopRequireDefault","require","obj","__esModule","SmallInt","id","type","name","declaration","writeTypeInfo","buffer","writeUInt8","writeParameterData","parameter","_options","cb","writeInt16LE","Number","validate","isNaN","TypeError","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAlC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,MAAME,QAAQ,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,IAAI,EAAE,MAFS;AAGfC,EAAAA,IAAI,EAAE,UAHS;AAIfC,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,WAAO,UAAP;AACD,GANc;AAOfC,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC5CA,IAAAA,MAAM,CAACC,UAAP,CAAkBZ,KAAK,CAACD,OAAN,CAAcO,EAAhC;AACAK,IAAAA,MAAM,CAACC,UAAP,CAAkB,CAAlB;AACD,GAVc;AAWfC,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BF,MAA5B,EAAoCG,SAApC,EAA+CC,QAA/C,EAAyDC,EAAzD,EAA6D;AAC/E,QAAIF,SAAS,CAAChB,KAAV,IAAmB,IAAvB,EAA6B;AAC3Ba,MAAAA,MAAM,CAACC,UAAP,CAAkB,CAAlB;AACAD,MAAAA,MAAM,CAACM,YAAP,CAAoBC,MAAM,CAACJ,SAAS,CAAChB,KAAX,CAA1B;AACD,KAHD,MAGO;AACLa,MAAAA,MAAM,CAACC,UAAP,CAAkB,CAAlB;AACD;;AAEDI,IAAAA,EAAE;AACH,GApBc;AAqBfG,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBrB,KAAlB,EAAyB;AACjC,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,MAAAA,KAAK,GAAGoB,MAAM,CAACpB,KAAD,CAAd;AACD;;AAED,QAAIsB,KAAK,CAACtB,KAAD,CAAT,EAAkB;AAChB,aAAO,IAAIuB,SAAJ,CAAc,iBAAd,CAAP;AACD;;AAED,QAAIvB,KAAK,GAAG,CAAC,KAAT,IAAkBA,KAAK,GAAG,KAA9B,EAAqC;AACnC,aAAO,IAAIuB,SAAJ,CAAc,oDAAd,CAAP;AACD;;AAED,WAAOvB,KAAK,GAAG,CAAf;AACD;AAvCc,CAAjB;AAyCA,IAAIwB,QAAQ,GAAGjB,QAAf;AACAR,OAAO,CAACE,OAAR,GAAkBuB,QAAlB;AACAC,MAAM,CAAC1B,OAAP,GAAiBQ,QAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _intn = _interopRequireDefault(require(\"./intn\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SmallInt = {\n  id: 0x34,\n  type: 'INT2',\n  name: 'SmallInt',\n  declaration: function declaration() {\n    return 'smallint';\n  },\n  writeTypeInfo: function writeTypeInfo(buffer) {\n    buffer.writeUInt8(_intn.default.id);\n    buffer.writeUInt8(2);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, _options, cb) {\n    if (parameter.value != null) {\n      buffer.writeUInt8(2);\n      buffer.writeInt16LE(Number(parameter.value));\n    } else {\n      buffer.writeUInt8(0);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'number') {\n      value = Number(value);\n    }\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    if (value < -32768 || value > 32767) {\n      return new TypeError('Value must be between -32768 and 32767, inclusive.');\n    }\n\n    return value | 0;\n  }\n};\nvar _default = SmallInt;\nexports.default = _default;\nmodule.exports = SmallInt;"]},"metadata":{},"sourceType":"script"}