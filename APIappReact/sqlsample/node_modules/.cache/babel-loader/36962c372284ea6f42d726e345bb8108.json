{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _bl = _interopRequireDefault(require(\"bl\"));\n\nvar _readableStream = require(\"readable-stream\");\n\nvar _packet = require(\"./packet\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nclass OutgoingMessageStream extends _readableStream.Duplex {\n  constructor(debug, {\n    packetSize\n  }) {\n    super({\n      writableObjectMode: true\n    });\n    this.packetSize = void 0;\n    this.debug = void 0;\n    this.bl = void 0;\n    this.currentMessage = void 0;\n    this.packetSize = packetSize;\n    this.debug = debug;\n    this.bl = new _bl.default(); // When the writable side is ended, push `null`\n    // to also end the readable side.\n\n    this.on('finish', () => {\n      this.push(null);\n    });\n  }\n\n  _write(message, _encoding, callback) {\n    const length = this.packetSize - _packet.HEADER_LENGTH;\n    let packetNumber = 0;\n    this.currentMessage = message;\n    this.currentMessage.on('data', data => {\n      if (message.ignore) {\n        return;\n      }\n\n      this.bl.append(data);\n\n      while (this.bl.length > length) {\n        const data = this.bl.slice(0, length);\n        this.bl.consume(length); // TODO: Get rid of creating `Packet` instances here.\n\n        const packet = new _packet.Packet(message.type);\n        packet.packetId(packetNumber += 1);\n        packet.resetConnection(message.resetConnection);\n        packet.addData(data);\n        this.debug.packet('Sent', packet);\n        this.debug.data(packet);\n\n        if (this.push(packet.buffer) === false) {\n          message.pause();\n        }\n      }\n    });\n    this.currentMessage.on('end', () => {\n      const data = this.bl.slice();\n      this.bl.consume(data.length); // TODO: Get rid of creating `Packet` instances here.\n\n      const packet = new _packet.Packet(message.type);\n      packet.packetId(packetNumber += 1);\n      packet.resetConnection(message.resetConnection);\n      packet.last(true);\n      packet.ignore(message.ignore);\n      packet.addData(data);\n      this.debug.packet('Sent', packet);\n      this.debug.data(packet);\n      this.push(packet.buffer);\n      this.currentMessage = undefined;\n      callback();\n    });\n  }\n\n  _read(_size) {\n    // If we do have a message, resume it and get data flowing.\n    // Otherwise, there is nothing to do.\n    if (this.currentMessage) {\n      this.currentMessage.resume();\n    }\n  }\n\n}\n\nvar _default = OutgoingMessageStream;\nexports.default = _default;\nmodule.exports = OutgoingMessageStream;","map":{"version":3,"sources":["C:/Projects/sqlsample/node_modules/tedious/lib/outgoing-message-stream.js"],"names":["Object","defineProperty","exports","value","default","_bl","_interopRequireDefault","require","_readableStream","_packet","obj","__esModule","OutgoingMessageStream","Duplex","constructor","debug","packetSize","writableObjectMode","bl","currentMessage","on","push","_write","message","_encoding","callback","length","HEADER_LENGTH","packetNumber","data","ignore","append","slice","consume","packet","Packet","type","packetId","resetConnection","addData","buffer","pause","last","undefined","_read","_size","resume","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _bl = _interopRequireDefault(require(\"bl\"));\n\nvar _readableStream = require(\"readable-stream\");\n\nvar _packet = require(\"./packet\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass OutgoingMessageStream extends _readableStream.Duplex {\n  constructor(debug, {\n    packetSize\n  }) {\n    super({\n      writableObjectMode: true\n    });\n    this.packetSize = void 0;\n    this.debug = void 0;\n    this.bl = void 0;\n    this.currentMessage = void 0;\n    this.packetSize = packetSize;\n    this.debug = debug;\n    this.bl = new _bl.default(); // When the writable side is ended, push `null`\n    // to also end the readable side.\n\n    this.on('finish', () => {\n      this.push(null);\n    });\n  }\n\n  _write(message, _encoding, callback) {\n    const length = this.packetSize - _packet.HEADER_LENGTH;\n    let packetNumber = 0;\n    this.currentMessage = message;\n    this.currentMessage.on('data', data => {\n      if (message.ignore) {\n        return;\n      }\n\n      this.bl.append(data);\n\n      while (this.bl.length > length) {\n        const data = this.bl.slice(0, length);\n        this.bl.consume(length); // TODO: Get rid of creating `Packet` instances here.\n\n        const packet = new _packet.Packet(message.type);\n        packet.packetId(packetNumber += 1);\n        packet.resetConnection(message.resetConnection);\n        packet.addData(data);\n        this.debug.packet('Sent', packet);\n        this.debug.data(packet);\n\n        if (this.push(packet.buffer) === false) {\n          message.pause();\n        }\n      }\n    });\n    this.currentMessage.on('end', () => {\n      const data = this.bl.slice();\n      this.bl.consume(data.length); // TODO: Get rid of creating `Packet` instances here.\n\n      const packet = new _packet.Packet(message.type);\n      packet.packetId(packetNumber += 1);\n      packet.resetConnection(message.resetConnection);\n      packet.last(true);\n      packet.ignore(message.ignore);\n      packet.addData(data);\n      this.debug.packet('Sent', packet);\n      this.debug.data(packet);\n      this.push(packet.buffer);\n      this.currentMessage = undefined;\n      callback();\n    });\n  }\n\n  _read(_size) {\n    // If we do have a message, resume it and get data flowing.\n    // Otherwise, there is nothing to do.\n    if (this.currentMessage) {\n      this.currentMessage.resume();\n    }\n  }\n\n}\n\nvar _default = OutgoingMessageStream;\nexports.default = _default;\nmodule.exports = OutgoingMessageStream;"]},"metadata":{},"sourceType":"script"}